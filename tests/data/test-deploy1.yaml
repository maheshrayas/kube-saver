apiVersion: v1
kind: Namespace
metadata:
  name: kuber1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kuber1
  name: test-kuber1-deploy1
  annotations:
    kubesaver.com/ignore: true
  labels:
    app: go-app-kuber1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-app
  template:
    metadata:
      labels:
        app: go-app
    spec:
      containers:
        - name: go-app
          image: maheshrayas/goapp:1.0
          ports:
            - containerPort: 8090
---
apiVersion: apps/v1
kind: StatefulSet

metadata:
  namespace: kuber1
  name: test-kuber1-ss1
spec:
  selector:
    matchLabels:
      app:
        nginx # Label selector that determines which Pods belong to the StatefulSet
        # Must match spec: template: metadata: labels
  serviceName: "nginx"
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx # Pod template's label selector
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: nginx
          image: k8s.gcr.io/nginx-slim:0.8
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
    - metadata:
        name: www
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: kuber1
  name: test-kuber1-cj1
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: hello
              image: busybox:1.28
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -c
                - date; echo Hello from the Kubernetes cluster
          restartPolicy: OnFailure
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: test-kuber1-hpa
  namespace: kuber1
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-kuber1-deploy1
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Namespace
metadata:
  name: kuber2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kuber2
  name: test-kuber2-deploy1
  labels:
    app: go-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-app
  template:
    metadata:
      labels:
        app: go-app
    spec:
      containers:
        - name: go-app
          image: maheshrayas/goapp:1.0
          ports:
            - containerPort: 8090
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: kuber2
  name: test-kuber2-ss2
spec:
  selector:
    matchLabels:
      app: nginx
  serviceName: "nginx"
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: nginx
          image: k8s.gcr.io/nginx-slim:0.8
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
    - metadata:
        name: www
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: kuber2
  name: test-kuber2-cj2
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: hello
              image: busybox:1.28
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -c
                - date; echo Hello from the Kubernetes cluster
          restartPolicy: OnFailure
---

